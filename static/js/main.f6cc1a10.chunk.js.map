{"version":3,"sources":["components/utils.js","components/clock/display/display.jsx","components/clock/display/index.js","components/clock/index.js","components/clock/clock.jsx","App.js","index.js"],"names":["getRandomColor","color","i","Math","floor","random","createDate","showViewName","d","Date","toLocaleTimeString","toLocaleDateString","getDay","toString","getDate","VIEWS","Display","state","date","currView","views","tick","setState","componentDidMount","timerID","setInterval","componentWillUnmount","clearInterval","onViewHandler","viewsCount","length","filterView","showClock","this","className","onClick","Component","Clock","isClick","onBgChanges","styles","background","style","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNACaA,EAAiB,WAI5B,IAHA,IACGC,EAAQ,IAEFC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,GAJc,mBAIGE,KAAKC,MAAsB,GAAhBD,KAAKE,WAEnC,OAAOJ,GAIIK,EAAa,SAACC,GACzB,IAAMC,EAAI,IAAIC,KAoBd,MAAoB,SAAjBF,EAjBMC,EAAEE,qBAoBS,SAAjBH,EAhBMC,EAAEG,qBAmBS,QAAjBJ,EAfY,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAC/DC,EAAEI,UAAUC,WAET,IADPL,EAAEM,UAAUD,gBAa3B,GClCIE,G,MACE,GADFA,EAEE,EAFFA,EAGC,ECNQC,E,4MDUdd,EAAE,E,EAEFe,MAAQ,CACPC,KAAM,IAAIT,KACVU,SAAUJ,EACVK,MAAO,CAAC,OAAQ,OAAQ,Q,EAIzBC,KAAO,WACJ,EAAKC,SAAS,CACZJ,KAAM,IAAIT,Q,EAGfc,kBAAoB,WACjB,EAAKC,QAAUC,aACb,kBAAM,EAAKJ,SACX,M,EAGJK,qBAAuB,WACrBC,cAAc,EAAKH,U,EAItBI,cAAgB,WACf,IAAMC,EAAa,EAAKZ,MAAMG,MAAMU,OAE/B,EAAK5B,EAAI2B,EACb,EAAK3B,IAGF,EAAKA,EAAI,EAGX,EAAKoB,SAAS,CACZH,SAAU,EAAKjB,K,EAIpB6B,WAAa,WAGZ,OAFe,EAAKd,MAAME,UAGzB,KAAKJ,EACJ,OAAOT,EAAW,QAEnB,KAAKS,EACH,OAAOT,EAAW,QAEpB,KAAKS,EACJ,OAAOT,EAAW,OAEnB,QACC,MAAO,U,uDAIA,IAAD,OACF0B,EAAYC,KAAKF,aAEvB,OACC,yBAAKG,UAAU,QACZC,QAAS,kBAAM,EAAKP,kBAEtB,wBAAIM,UAAW,QACbF,Q,GAnE+BI,aETtBC,G,kNCMdpB,MAAQ,CACPqB,SAAS,G,EAGVC,YAAc,WAMb,OALA,EAAKjB,SAAS,CACbgB,SAAS,IAGOtC,K,uDAIP,IAAD,OACHwC,EAAS,CACdC,WAAYR,KAAKhB,MAAMqB,QAAUtC,IAAmBiC,KAAKM,eAExD,OACD,yBAAKG,MAAOF,EACTL,QAAS,kBAAM,EAAKI,gBACtB,kBAAC,EAAD,W,GAtB+BH,cCFdO,E,uKAEjB,OACE,6BACE,kBAAC,EAAD,W,GAJyBP,aCAjCQ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.f6cc1a10.chunk.js","sourcesContent":["//get random color\nexport const getRandomColor = () => {\n  const letters = '0123456789ABCDEF';\n\tlet color = '#';\n\t\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\n//create current time/date/day\nexport const createDate = (showViewName) => {\n  const d = new Date();\n\n  const getTime = () => {\n    return d.toLocaleTimeString();\n  }\n  \n  const getDate = () => {\n    return d.toLocaleDateString();\n  }\n\n  const getDay = () => {\n    const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    const day = days[d.getDay()].toString();\n    const date = d.getDate().toString();\n    const today = day + '/' + date;\n\n    return today;\n  }\n\n\n  if(showViewName === 'time') {    \n    return getTime();\n  } \n  if(showViewName === 'date') {\n    return getDate();\n  }\n  if(showViewName === 'day') {\n    return getDay();\n  }\n}","import React, { Component } from 'react';\nimport { createDate } from '../../utils';\nimport './display.scss';\n\n\nconst VIEWS = {\n  TIME: 1,\n  DATE: 2,\n  DAY: 3\n}\n\nexport default class Display extends Component {\n\ti=1;\n\n\tstate = {\n\t\tdate: new Date(),\n\t\tcurrView: VIEWS.TIME, // 1, 2, 3\n\t\tviews: ['time', 'date', 'day']\n\t}\n\t\n\n\ttick = () => {\n    this.setState({\n      date: new Date()\n    });\n\t}\n\tcomponentDidMount = () => {\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000\n    );\n  }\n  componentWillUnmount = () => {\n    clearInterval(this.timerID);\n  }\n\n\n\tonViewHandler = () => {\n\t\tconst viewsCount = this.state.views.length;\t\n\n    if(this.i < viewsCount) {\n\t\t\tthis.i++\n\t\t}\n\t\telse {\n      this.i = 1\n\t\t}\n\t\t\n    this.setState({\n      currView: this.i\n\t\t})\n  }\n\n\tfilterView = () => {\n\t\tlet currView = this.state.currView;\n\n\t\tswitch (currView) {\n\t\t\tcase VIEWS.TIME:\n\t\t\t\treturn createDate('time');\n\t\t\t\tbreak;\t\n\t\t\tcase VIEWS.DATE:\n\t\t\t  return createDate('date');\n\t\t\t\tbreak;\n\t\t\tcase VIEWS.DAY:\n\t\t\t\treturn createDate('day');\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn \"error\";\n\t\t}\n  }\n\n\trender() {\n\t\tconst showClock = this.filterView();\n\n\t\treturn (\n\t\t\t<div className='clock'\n\t\t\t\t\t onClick={() => this.onViewHandler()} >\n\n\t\t\t\t<h1 className={'time'}>\n\t\t\t\t\t{showClock}\n\t\t\t\t</h1>\n\t\t\t</div>\n\t\t)\n\t}\n}","import Display from './display';\n\nexport default Display;","import Clock from './clock';\n\nexport default Clock;","import React, { Component } from 'react';\nimport { getRandomColor } from '../utils';\nimport Display from './display';\nimport './clock.scss';\n\n\nexport default class Clock extends Component {\n\n\tstate = {\n\t\tisClick: false\n\t}\n\n\tonBgChanges = () => {\n\t\tthis.setState({\n\t\t\tisClick: true\n\t\t})\n\n\t\tconst newColor = getRandomColor();\n\t\treturn newColor;\n\t}\n\n  render() {\n\t\tconst styles = {\n\t\t\tbackground: this.state.isClick ? getRandomColor() : this.onBgChanges()\n\t\t}\n    return (\n\t\t\t<div style={styles}\n\t\t\t\t\t onClick={() => this.onBgChanges()} >\n\t\t\t\t<Display />\n      </div>\n    );\n  };\n};\n","import React, { Component } from 'react';\nimport Clock from '../src/components/clock';\n\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div>\n        <Clock />\n      </div>\n    );\n  };\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}