{"version":3,"sources":["components/utils.js","components/clock/display/index.js","components/clock/display/display.jsx","components/clock/clock.jsx","components/clock/index.js","App.js","index.js"],"names":["getRandomColor","color","i","Math","floor","random","createDate","showViewName","d","Date","setInterval","t","toLocaleTimeString","document","getElementById","innerHTML","toLocaleDateString","getDay","toString","getDate","Display","state","styles","background","this","props","showClock","onViewHandler","className","style","onClick","Component","VIEWS","Clock","views","currView","viewsCount","length","setState","filterView","App","ReactDOM","render","StrictMode"],"mappings":"gNACaA,EAAiB,WAI5B,IAHA,IACGC,EAAQ,IAEFC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,GAJc,mBAIGE,KAAKC,MAAsB,GAAhBD,KAAKE,WAEnC,OAAOJ,GAIIK,EAAa,SAACC,GACzB,IAAMC,EAAI,IAAIC,KA8Bd,OATAC,aAEA,WACE,IACMC,GADI,IAAIF,MACFG,qBACZC,SAASC,eAAe,QAAQC,UAAYJ,IALzB,KASD,SAAjBJ,EA3BMC,EAAEI,qBA8BS,SAAjBL,EA1BMC,EAAEQ,qBA6BS,QAAjBT,EAzBY,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAC/DC,EAAES,UAAUC,WAET,IADPV,EAAEW,UAAUD,gBAuB3B,GC/CaE,G,kNCIdC,MAAQ,G,uDAMP,IAAMC,EAAS,CACdC,WAAYvB,KAFL,EAI2BwB,KAAKC,MAAjCC,EAJC,EAIDA,UAAWC,EAJV,EAIUA,cAGlB,OACC,yBAAKC,UAAU,QAAQC,MAAOP,EAC3BQ,QAAS,kBAAMH,MAEjB,wBAAIC,UAAW,QACbF,Q,GAlB+BK,cCC/BC,G,MACE,GADFA,EAEE,EAFFA,EAGC,ECPQC,E,4MDWd/B,EAAE,E,EAEDmB,MAAQ,CACRa,MAAO,CAAC,OAAQ,OAAQ,OACxBC,SAAUH,G,EAIVL,cAAgB,WAChB,IAAMS,EAAa,EAAKf,MAAMa,MAAMG,OAE/B,EAAKnC,EAAIkC,EACb,EAAKlC,IAGF,EAAKA,EAAI,EAGX,EAAKoC,SAAS,CACZH,SAAU,EAAKjC,K,EAInBqC,WAAa,WAGb,OAFe,EAAKlB,MAAMc,UAGzB,KAAKH,EAEJ,OAAO1B,EAAW,QAEnB,KAAK0B,EACH,OAAO1B,EAAW,QAEpB,KAAK0B,EACJ,OAAO1B,EAAW,OAEnB,QACC,MAAO,U,uDAKP,IAAMoB,EAAYF,KAAKe,aAEvB,OACE,6BACE,kBAAC,EAAD,CACEZ,cAAeH,KAAKG,cACpBD,UAAWA,S,GAlDcK,aERdS,E,uKAEjB,OACE,6BACE,kBAAC,EAAD,W,GAJyBT,aCAjCU,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF9B,SAASC,eAAe,U","file":"static/js/main.063a580d.chunk.js","sourcesContent":["//get random color\nexport const getRandomColor = () => {\n  const letters = '0123456789ABCDEF';\n\tlet color = '#';\n\t\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\n//create current time/date/day\nexport const createDate = (showViewName) => {\n  const d = new Date();\n\n  const getTime = () => {\n    return d.toLocaleTimeString();\n  }\n  \n  const getDate = () => {\n    return d.toLocaleDateString();\n  }\n\n  const getDay = () => {\n    const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    const day = days[d.getDay()].toString();\n    const date = d.getDate().toString();\n    const today = day + '/' + date;\n\n    return today;\n  }\n\n\n  //show time on header\n  setInterval(myTimer, 1000);\n\n  function myTimer() {\n    const d = new Date();\n    const t = d.toLocaleTimeString();\n    document.getElementById(\"demo\").innerHTML = t;\n  }\n\n\n  if(showViewName === 'time') {    \n    return getTime();\n  } \n  if(showViewName === 'date') {\n    return getDate();\n  }\n  if(showViewName === 'day') {\n    return getDay();\n  }\n}","import Display from './display';\n\nexport default Display;","import React, { Component } from 'react';\nimport {getRandomColor} from '../../utils';\nimport './display.scss';\n\n\nexport default class Display extends Component {\n\tstate = {\n\t\t\n\t}\n\t\n\n\trender() {\n\t\tconst styles = {\n\t\t\tbackground: getRandomColor()\n\t\t}\n\t\tconst {showClock, onViewHandler} = this.props;\n\t\t//setInterval(showClock, 1000);\n\n\t\treturn (\n\t\t\t<div className='clock' style={styles}\n\t\t\t\t\t onClick={() => onViewHandler()} >\n\n\t\t\t\t<h1 className={'time'}>\n\t\t\t\t\t{showClock}\n\t\t\t\t</h1>\n\t\t\t</div>\n\t\t)\n\t}\n}","import React, { Component } from 'react';\nimport { createDate } from '../utils';\nimport Display from './display';\nimport './clock.scss';\n\n\nconst VIEWS = {\n  TIME: 1,\n  DATE: 2,\n  DAY: 3\n}\n\nexport default class Clock extends Component {\n\ti=1\n\n  state = {\n\t\tviews: ['time', 'date', 'day'],\n\t\tcurrView: VIEWS.TIME, // 1, 2, 3\n\t\t//date: new Date()\n  }\n\n  onViewHandler = () => {\n\t\tconst viewsCount = this.state.views.length;\t\n\n    if(this.i < viewsCount) {\n\t\t\tthis.i++\n\t\t}\n\t\telse {\n      this.i = 1\n\t\t}\n\t\t\n    this.setState({\n      currView: this.i\n    })\n  }\n\n  filterView = () => {\n\t\tlet currView = this.state.currView;\t\t\n\n\t\tswitch (currView) {\n\t\t\tcase VIEWS.TIME:\n\t\t\t\t//setInterval(createDate('time'), 1000); //???\n\t\t\t\treturn createDate('time');\n\t\t\t\tbreak;\n\t\t\tcase VIEWS.DATE:\n\t\t\t  return createDate('date');\n\t\t\t\tbreak;\n\t\t\tcase VIEWS.DAY:\n\t\t\t\treturn createDate('day');\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn \"error\";\n\t\t}\n  }\n\n  render() {\n    const showClock = this.filterView();\n\n    return (\n      <div>\n        <Display \n          onViewHandler={this.onViewHandler}\n          showClock={showClock}\n        />\n      </div>\n    );\n  };\n};\n","import Clock from './clock';\n\nexport default Clock;","import React, { Component } from 'react';\nimport Clock from '../src/components/clock';\n\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div>\n        <Clock />\n      </div>\n    );\n  };\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}